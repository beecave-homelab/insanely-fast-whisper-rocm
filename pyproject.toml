[project]
name = "insanely-fast-whisper-api"
version = "0.9.1"
description = "A FastAPI wrapper around a custom Whisper-based ASR pipeline (ROCM version)"
authors = [
    {name = "elvee", email = "lowie@beecave.nl"},
]
dependencies = [
    "fastapi==0.116.1",
    "uvicorn==0.35.0",
    "python-multipart==0.0.20",
    "transformers==4.53.2",
    "python-dotenv==1.1.1",
    "PyYAML==6.0.2",
    "click==8.2.1",
    "gradio==5.38.0",
    "pydub==0.25.1",
    "numpy==1.26.4",
    "datasets==4.0.0",
    "accelerate==1.9.0",
    "optimum==1.26.1",
    "ffmpeg-python==0.2.0",
    "stable-ts==2.19.0",
    "demucs==0.4.1",
]
requires-python = "~=3.10"

[project.scripts]
insanely-fast-whisper-cli = "insanely_fast_whisper_api.cli.cli:main"
insanely-fast-whisper-webui = "insanely_fast_whisper_api.webui.app:launch_webui"
insanely-fast-whisper-api = "insanely_fast_whisper_api.__main__:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.pdm]
distribution = true

[tool.pdm.scripts]
start-webui = "insanely-fast-whisper-webui"
start-webui-debug = "insanely-fast-whisper-webui --debug"
start-api = "insanely-fast-whisper-api"
start-api-verbose = "insanely-fast-whisper-api -v"
cli = "insanely-fast-whisper-cli"
setup-config = "scripts.setup_config:main"

[[tool.pdm.source]]
name = "pypi"
url = "https://pypi.org/simple/"
verify_ssl = true
type = "index"
exclude_packages = ["torch", "torchaudio", "onnxruntime-rocm", "pytorch-triton-rocm"]
include_packages = ["*"]

[[tool.pdm.source]]
name = "rocm-wheels"
url = "https://repo.radeon.com/rocm/manylinux/rocm-rel-6.4.1/"
verify_ssl = true
type = "find_links"
include_packages = ["torch", "torchaudio", "onnxruntime-rocm", "pytorch-triton-rocm"]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest",
    "pytest-cov",
    # Code Quality
    "ruff",
    "black",
    "isort",
    "mypy",
    "pydocstyle",
    "pylint",
    # Type stubs for better static analysis
    "types-PyYAML",
    "typing-extensions",
]

rocm = [
    "torch==2.5.1",
    "torchaudio==2.5.0",
    "onnxruntime-rocm",
]

# Tool configurations for development
bench = [
    "pyamdgpuinfo>=2.1.7",
]

# bench-torch-2-0-1 = [
#     "torch==2.0.1",
# ]
# bench-torch-2-3-0 = [
#     "torch==2.3.0"
# ]
# bench-torch-2-4-1 = [
#     "torch==2.4.1"
# ]
# bench-torch-2-6-0 = [
#     "torch==2.6.0"
# ]

[tool.pdm.resolution]
excludes = ["torch==2.0.1", "torch==2.3.0", "torch==2.4.1", "torch==2.6.0"]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
show_error_codes = true
exclude = [
    "temp_uploads/",
    "transcripts/",
    "transcripts_zips/"
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | __pycache__
  | temp_uploads
  | transcripts
  | transcripts_zips
)/
'''

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["insanely_fast_whisper_api"]
skip = ["temp_uploads", "transcripts", "transcripts_zips"]

[tool.ruff]
line-length = 88
target-version = "py310"
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "temp_uploads",
    "transcripts",
    "transcripts_zips"
]

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
ignore = ["E501"]  # Line too long (handled by black)

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
