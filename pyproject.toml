[project]
name = "insanely-fast-whisper-api"
version = "1.0.0"
description = "A FastAPI wrapper around a custom Whisper-based ASR pipeline (ROCM version)"
authors = [
    {name = "elvee", email = "lowie@beecave.nl"},
]
dependencies = [
    "fastapi==0.116.1",
    "uvicorn==0.35.0",
    "python-multipart==0.0.20",
    "transformers==4.53.2",
    "python-dotenv==1.1.1",
    "PyYAML==6.0.2",
    "click==8.2.1",
    "gradio==5.38.0",
    "pydub==0.25.1",
    "numpy==1.26.4",
    "datasets==4.0.0",
    "accelerate==1.9.0",
    "optimum==1.26.1",
    "ffmpeg-python>=0.2.0",
    "stable-ts==2.19.0",
    "demucs==4.0.1",
    "huggingface-hub>=0.34.4",
    "soundfile>=0.12",
]
requires-python = "~=3.10"

[project.scripts]
insanely-fast-whisper-cli = "insanely_fast_whisper_api.cli.cli:main"
insanely-fast-whisper-webui = "insanely_fast_whisper_api.webui.app:launch_webui"
insanely-fast-whisper-api = "insanely_fast_whisper_api.__main__:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.pdm]
distribution = true

[tool.pdm.scripts]
start-webui = "insanely-fast-whisper-webui"
start-webui-debug = "insanely-fast-whisper-webui --debug"
start-api = "insanely-fast-whisper-api"
start-api-verbose = "insanely-fast-whisper-api -v"
cli = "insanely-fast-whisper-cli"
setup-config = {call = "scripts.setup_config:main"}
hf-models = {call = "scripts.hf_models:_main"}

[[tool.pdm.source]]
name = "pypi"
url = "https://pypi.org/simple/"
verify_ssl = true
type = "index"
exclude_packages = ["torch", "torchaudio", "onnxruntime-rocm", "pytorch-triton-rocm"]
include_packages = ["*"]

[[tool.pdm.source]]
name = "rocm-wheels"
url = "https://repo.radeon.com/rocm/manylinux/rocm-rel-6.4.1/"
verify_ssl = true
type = "find_links"
include_packages = ["torch", "torchaudio", "onnxruntime-rocm", "pytorch-triton-rocm"]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest",
    "pytest-cov",
    # Code Quality
    "ruff",
    # Type stubs for better static analysis
    "types-PyYAML",
    "typing-extensions",
]

rocm = [
    "torch==2.5.1",
    "torchaudio==2.5.0",
    "onnxruntime-rocm",
]

# Tool configurations for development
bench = [
    "pyamdgpuinfo>=2.1.7",
]

# bench-torch-2-0-1 = [
#     "torch==2.0.1",
# ]
# bench-torch-2-3-0 = [
#     "torch==2.3.0"
# ]
# bench-torch-2-4-1 = [
#     "torch==2.4.1"
# ]
# bench-torch-2-6-0 = [
#     "torch==2.6.0"
# ]

[tool.pdm.resolution]
excludes = ["torch==2.0.1", "torch==2.3.0", "torch==2.4.1", "torch==2.6.0"]

# ------------------------------
# Ruff (linter + formatter + import sorting)
# ------------------------------
[tool.ruff]
line-length = 88
target-version = "py310"                # adjust if you target 3.9/3.12
preview = true                          # needed for DOC + FA rules
src = ["insanely_fast_whisper_api"]     # first-party package path

[tool.ruff.lint]
select = [
  "F",      # Pyflakes (includes F403/F405 for wildcard imports)
  "E", "W", # pycodestyle subset (PEP 8 basics)
  "N",      # pep8-naming (snake_case, PascalCase)
  "I",      # isort (import sorting)
  "D",      # pydocstyle (docstring presence + Google style)
  "DOC",    # pydoclint (Args/Returns/Raises checks; needs preview)
  "ANN",    # flake8-annotations (type hints everywhere)
  "TID",    # flake8-tidy-imports (absolute imports: TID252)
  "UP",     # pyupgrade (modern syntax)
  "FA",     # future-annotations (auto `from __future__`; needs preview)
]

# Optional: stricter typing rules (discourage bare Any)
extend-select = ["ANN401"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]
known-first-party = ["insanely_fast_whisper_api"]

[tool.ruff.lint.per-file-ignores]
# Temporarily ignore long-line checks in tests
"tests/**/*.py" = ["E501"]

# ------------------------------
# Pytest & Coverage
# ------------------------------
[tool.pytest.ini_options]
addopts = "-q --cov=insanely_fast_whisper_api --cov-branch --cov-report=term-missing:skip-covered --cov-report=xml --cov-report=html --cov-fail-under=85"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
